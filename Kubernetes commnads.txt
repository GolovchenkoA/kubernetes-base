Useful resource: https://spacelift.io/blog/kubernetes-cheat-sheet
Source: https://www.youtube.com/watch?v=X48VuDVv0do  Kubernetes Tutorial for Beginners [FULL COURSE in 4 Hours]


-- Install Minicube
Time: 39:00
Link: https://kubernetes.io/docs/tasks/tools/


-- Powershell autocomplete
Link: https://kubernetes.io/docs/tasks/tools/install-kubectl-windows/

kubectl completion powershell | Out-String | Invoke-Expression


-------------------Official Manuals
 -- Install / Start/ Interact/ Deploy  (Service/LoadBalancer/Ingress)
https://minikube.sigs.k8s.io/docs/start/

-- Run minikube and create/get deployment, get pods,  create/get service etc...
https://kubernetes.io/docs/tutorials/hello-minikube/

----------------------------------------------------------------


-- Run minikube
Previously install and run docker

C:\Users\artem.holovchenko>minikube start
* minikube v1.29.0 on Microsoft Windows 10 Pro 10.0.19045.2604 Build 19045.2604
* Automatically selected the docker driver
* Using Docker Desktop driver with root privileges
* Starting control plane node minikube in cluster minikube
* Pulling base image ...
* Downloading Kubernetes v1.26.1 preload ...
    > preloaded-images-k8s-v18-v1...:  397.05 MiB / 397.05 MiB  100.00% 26.90 M
    > gcr.io/k8s-minikube/kicbase...:  407.19 MiB / 407.19 MiB  100.00% 17.01 M
* Creating docker container (CPUs=2, Memory=4000MB) ...
* Preparing Kubernetes v1.26.1 on Docker 20.10.23 ...
  - Generating certificates and keys ...
  - Booting up control plane ...
  - Configuring RBAC rules ...
* Configuring bridge CNI (Container Networking Interface) ...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
* Verifying Kubernetes components...
* Enabled addons: storage-provisioner, default-storageclass
* Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


-- Minikube help
C:\Users\artem.holovchenko>minikube
minikube provisions and manages local Kubernetes clusters optimized for development workflows.

Basic Commands:
  start            Starts a local Kubernetes cluster
  status           Gets the status of a local Kubernetes cluster
  stop             Stops a running local Kubernetes cluster
  delete           Deletes a local Kubernetes cluster
  dashboard        Access the Kubernetes dashboard running within the minikube cluster
  pause            pause Kubernetes
  unpause          unpause Kubernetes

Images Commands:
  docker-env       Provides instructions to point your terminal's docker-cli to the Docker Engine inside minikube.
(Useful for building docker images directly inside minikube)
  podman-env       Configure environment to use minikube's Podman service
  cache            Manage cache for images
  image            Manage images

Configuration and Management Commands:
  addons           Enable or disable a minikube addon
  config           Modify persistent configuration values
  profile          Get or list the current profiles (clusters)
  update-context   Update kubeconfig in case of an IP or port change

Networking and Connectivity Commands:
  service          Returns a URL to connect to a service
  tunnel           Connect to LoadBalancer services

Advanced Commands:
  mount            Mounts the specified directory into minikube
  ssh              Log into the minikube environment (for debugging)
  kubectl          Run a kubectl binary matching the cluster version
  node             Add, remove, or list additional nodes
  cp               Copy the specified file into minikube

Troubleshooting Commands:
  ssh-key          Retrieve the ssh identity key path of the specified node
  ssh-host         Retrieve the ssh host key of the specified node
  ip               Retrieves the IP address of the specified node
  logs             Returns logs to debug a local Kubernetes cluster
  update-check     Print current and latest version number
  version          Print the version of minikube
  options          Show a list of global command-line options (applies to all commands).

Other Commands:
  completion       Generate command completion for a shell
  license          Outputs the licenses of dependencies to a directory

Use "minikube <command> --help" for more information about a given command.






-- Dashboard (in browser)
minikube dashboard

-- Get nodes
kubectl get nodes
NAME       STATUS   ROLES           AGE   VERSION
minikube   Ready    control-plane   12m   v1.26.1


-- check status
minikube status

minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

-- check version
kubectl version
WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.
Client Version: version.Info{Major:"1", Minor:"25", GitVersion:"v1.25.2", GitCommit:"5835544ca568b757a8ecae5c153f317e5736700e", GitTreeState:"clean", BuildDate:"2022-09-21T14:33:49Z", GoVersion:"go1.19.1", Compiler:"gc", Platform:"windows/amd64"}
Kustomize Version: v4.5.7
Server Version: version.Info{Major:"1", Minor:"26", GitVersion:"v1.26.1", GitCommit:"8f94681cd294aa8cfd3407b8191f6c70214973a4", GitTreeState:"clean", BuildDate:"2023-01-18T15:51:25Z", GoVersion:"go1.19.5", Compiler:"gc", Platform:"linux/amd64"}



==============================Pods=========================================

-- Get Pods (right after minikube has installed)
kubectl get pods
No resources found in default namespace.


C:\Users\artem.holovchenko>kubectl get pods -A
NAMESPACE              NAME                                        READY   STATUS    RESTARTS        AGE
kube-system            coredns-787d4945fb-8q8ks                    1/1     Running   0               9m1s
kube-system            etcd-minikube                               1/1     Running   0               9m13s
kube-system            kube-apiserver-minikube                     1/1     Running   0               9m11s
kube-system            kube-controller-manager-minikube            1/1     Running   0               9m12s
kube-system            kube-proxy-c9ql5                            1/1     Running   0               9m1s
kube-system            kube-scheduler-minikube                     1/1     Running   0               9m12s
kube-system            storage-provisioner                         1/1     Running   1 (8m40s ago)   9m11s
kubernetes-dashboard   dashboard-metrics-scraper-5c6664855-bkc75   1/1     Running   0               7m2s
kubernetes-dashboard   kubernetes-dashboard-55c4cbbc7c-qrvk5       1/1     Running   0               7m2s


-- Describe
kubectl describe pod nginx-depl-8475696677-bcrsb



=============================Services==================================
kubectl get services
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   20m




=============================Deployment==================================
 kubectl create deployment NAME --image=image [--dry-run] [options]
 
 -- create
kubectl create deployment nginx-depl --image=nginx
deployment.apps/nginx-depl created

-- replicas
kubectl get replicaset
NAME                   DESIRED   CURRENT   READY   AGE
nginx-depl-56cb8b6d7   1         1         1       17s


-- edit 
Time: 51:00
Call the command below and change nginx version to 1.16. After that call kubectl get pods and see that a new pod is created

    spec:
      containers:
      - image: nginx:1.16

kubectl edit deployment nginx-depl
deployment.apps/nginx-depl edited


Then check replicas
kubectl get replicasets.apps
or just
kubectl get replicaset
NAME                    DESIRED   CURRENT   READY   AGE
nginx-depl-56cb8b6d7    0         0         0       11m
nginx-depl-8475696677   1         1         1       2m8s

==========================================================================



-- Create help
kubectl create -h
kubectl create deployment NAME --image=image [--dry-run] [options]



======================Logs==================================

-- get
kubectl logs nginx-depl-8475696677-bcrsb



============================Namespaces 
Time: 1:47
(4 by default)
Namespaces is like virtual cluster inside Kubernetes cluster
Purpose: group resources in namespaces to organize ones. 
For example db-namespace (DB and all required resources for that) or Monitoring-namespace (everything for monitoring)
Or grouping for blue/green deployment and have 2 namespaces for such deployment
or namespaces for 2 different teams that work on the same kubenretes cluster

Volumes and nodes live in non-namespace region. These components are global

kubectl get namespace

kubectl create namespace my-namespace


--list global and namespace-specific resources
kubectl api-resources --namespaced=false
kubectl api-resources --namespaced=true

-- apply configmap in a namespace
kubectl apply -f some-configmap.yaml --namespace=my-namespace

-- get config map in a namespace
kubectl get configmap -n my-namespace

!! it's better to add in a configmap configuration file (kind: ConfigMap) metadata with namespace:my-namespace

-- set default namespace : use kubens (kubectx) tool to do that



==================Ingress==========================
It's external service
Use it to redirect external queries inside kubernetes cluster (to internal service)

kind: Ingress
